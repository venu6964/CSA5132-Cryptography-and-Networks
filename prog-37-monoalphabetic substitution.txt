#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

// English letter frequency
const float english_frequency[] = { 0.082, 0.015, 0.028, 0.043, 0.127, 0.022, 0.02, 0.061, 0.07, 0.002, 0.008, 0.04, 0.024, 0.067, 0.075, 0.019, 0.001, 0.06, 0.063, 0.091, 0.028, 0.01, 0.023, 0.001, 0.02, 0.001 };

// Function to count letter frequencies in the ciphertext
void count_letter_frequencies(const char *ciphertext, int *frequency) {
    for (int i = 0; ciphertext[i] != '\0'; i++) {
        if (isalpha(ciphertext[i])) {
            frequency[toupper(ciphertext[i]) - 'A']++;
        }
    }
}

// Function to calculate chi-squared statistic
float chi_squared_statistic(const int *observed, const float *expected) {
    float chi_sq = 0;
    for (int i = 0; i < 26; i++) {
        chi_sq += ((observed[i] - expected[i]) * (observed[i] - expected[i])) / expected[i];
    }
    return chi_sq;
}

// Function to decrypt ciphertext using the given key
void decrypt(const char *ciphertext, char *plaintext, const int *key) {
    for (int i = 0; ciphertext[i] != '\0'; i++) {
        if (isalpha(ciphertext[i])) {
            char base = isupper(ciphertext[i]) ? 'A' : 'a';
            plaintext[i] = (ciphertext[i] - base - key[ciphertext[i] - base] + 26) % 26 + base;
        } else {
            plaintext[i] = ciphertext[i];
        }
    }
    plaintext[strlen(ciphertext)] = '\0';
}

int main() {
    const char *ciphertext = "QEB NRFZH YOLTK CLU GRJMP LSBO QEB IXWV ALD"; // Example ciphertext
    int frequency[26] = {0};
    char plaintext[100]; // Adjust size as needed
    int key[26] = {0};
    float chi_squared;
    int top = 10; // Number of top possible plaintexts to display

    count_letter_frequencies(ciphertext, frequency);

    for (int k = 0; k < 26; k++) {
        // Decrypt using the current key
        decrypt(ciphertext, plaintext, key);

        // Calculate chi-squared statistic
        chi_squared = chi_squared_statistic(frequency, english_frequency);

        printf("Key: ");
        for (int i = 0; i < 26; i++) {
            printf("%d ", key[i]);
        }
        printf("\nPlaintext: %s\nChi-Squared: %.2f\n\n", plaintext, chi_squared);

        // Find the next key by shifting each letter by 1
        for (int i = 0; i < 26; i++) {
            key[i] = (key[i] + 1) % 26;
        }
    }

    return 0;
}
